# Generated by Django 3.2 on 2023-03-09 09:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chatgptapiv1', '0005_auto_20230309_0326'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='userinfo',
            name='max_tokens',
        ),
        migrations.AddField(
            model_name='rolevoiceattribution',
            name='chatgpt_frequency_penalty',
            field=models.DecimalField(decimal_places=2, default=1.0, help_text='Number between -2.0 and 2.0.当 frequency_penalty 值越大时，生成的文本中重复的词语会更少，从而增加文本的多样性', max_digits=7, validators=[django.core.validators.MinValueValidator(-2.0, message='Value must be greater than or equal to -2.0'), django.core.validators.MaxValueValidator(2.0, message='Value must be less than or equal to 2.0')], verbose_name='ChatGPT的FREQUENCY PENALTY'),
        ),
        migrations.AddField(
            model_name='rolevoiceattribution',
            name='chatgpt_max_tokens',
            field=models.PositiveIntegerField(default=1200, validators=[django.core.validators.MinValueValidator(1, message='Value must be greater than or equal to 1'), django.core.validators.MaxValueValidator(4096, message='Value must be less than or equal to 4096')], verbose_name='ChatGPT'),
        ),
        migrations.AddField(
            model_name='rolevoiceattribution',
            name='chatgpt_model_p',
            field=models.DecimalField(decimal_places=2, default=1, max_digits=7, validators=[django.core.validators.MinValueValidator(0, message='Value must be greater than or equal to 0'), django.core.validators.MaxValueValidator(1.0, message='Value must be less than or equal to 1.0')], verbose_name='ChatGPT的top_P'),
        ),
        migrations.AddField(
            model_name='rolevoiceattribution',
            name='chatgpt_model_temperature',
            field=models.DecimalField(decimal_places=2, default=0.8, help_text='Temperature is a value between 0 and 1.higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.', max_digits=7, validators=[django.core.validators.MinValueValidator(0, message='Value must be greater than or equal to 0'), django.core.validators.MaxValueValidator(1.0, message='Value must be less than or equal to 1.0')], verbose_name='ChatGPT的temperature'),
        ),
        migrations.AddField(
            model_name='rolevoiceattribution',
            name='chatgpt_presence_penalty',
            field=models.DecimalField(decimal_places=2, default=0.6, help_text='Number between -2.0 and 2.0.当 presence_penalty 值越大时，生成的文本会更加准确，但也会限制生成的多样性', max_digits=7, validators=[django.core.validators.MinValueValidator(-2.0, message='Value must be greater than or equal to -2.0'), django.core.validators.MaxValueValidator(2.0, message='Value must be less than or equal to 2.0')], verbose_name='ChatGPT的PRESENCE_PENALTY'),
        ),
    ]
